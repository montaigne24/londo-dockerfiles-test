user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Optimisations de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Inclusions des configurations
    include /etc/nginx/includes/gzip.conf;
    include /etc/nginx/includes/ssl.conf;
    include /etc/nginx/includes/security-headers.conf;

    # Configuration ModSecurity
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity.conf;

    # Configuration des serveurs
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Redirection vers HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name example.com;

        # Certificats SSL
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # Configuration SSL
        include /etc/nginx/includes/ssl.conf;

        # Headers de sécurité
        include /etc/nginx/includes/security-headers.conf;

        # Configuration de proxy
        include /etc/nginx/includes/proxy.conf;

        # Routes
        location / {
            proxy_pass http://angular-app:80;
        }

        location /api/ {
            proxy_pass http://nestjs-app:3000/;
        }

        location /express/ {
            proxy_pass http://express-app:8080/;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
    }
}